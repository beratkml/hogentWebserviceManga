generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model genre {
  id    String  @id @unique @default(uuid())
  name  String
  manga manga[]
}

model manga {
  id              String            @id @unique @default(uuid())
  name            String
  chapters        Int
  isFinished      Boolean
  author          String
  release_date    DateTime
  description     String
  thumbnail       String
  genreId         String
  genre           genre             @relation(fields: [genreId], references: [id], onDelete: Cascade, map: "Manga_genreId_fkey")
  mangacollection mangacollection[]
  user            user?             @relation(fields: [userId], references: [id])
  userId          String?

  @@index([genreId], map: "Manga_genreId_fkey")
}

model mangacollection {
  id              String        @id @unique @default(uuid())
  start_date      DateTime
  end_date        DateTime
  current_chapter Int
  mangaId         String
  userId          String
  statusReadingId String
  manga           manga         @relation(fields: [mangaId], references: [id], onDelete: Cascade, map: "MangaCollection_mangaId_fkey")
  statusreading   statusreading @relation(fields: [statusReadingId], references: [id], onDelete: Cascade, map: "MangaCollection_statusReadingId_fkey")
  user            user          @relation(fields: [userId], references: [id], onDelete: Cascade, map: "MangaCollection_userId_fkey")

  @@index([mangaId], map: "MangaCollection_mangaId_fkey")
  @@index([statusReadingId], map: "MangaCollection_statusReadingId_fkey")
  @@index([userId], map: "MangaCollection_userId_fkey")
}

model statusreading {
  id              String            @id @unique @default(uuid())
  type            String
  mangacollection mangacollection[]
}

model user {
  id              String            @id @unique @default(uuid())
  authid          String
  name            String
  mangacollection mangacollection[]
  manga           manga[]
}
